// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // uses connection pooling
  directUrl = env("DATABASE_URL") // uses a direct connection
}

model Resume {
  id     String @id @default(cuid())
  userId String

  title       String?
  description String?

  photoUrl    String?
  colorHex    String  @default("#000000")
  borderStyle String  @default("squircle")
  template    String  @default("classic")
  summary     String?
  firstName   String?
  lastName    String?
  jobTitle    String?
  city        String?
  country     String?
  phone       String?
  email       String?
  jobDescription String? @db.Text
  cvUrl       String?
  
  // Analysis fields
  matchingPoints String[] @default([])
  prioritizedSkills String[] @default([])
  analysisReason String?

  workExperiences WorkExperience[]
  educations      Education[]
  skills          String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("resumes")
}

model WorkExperience {
  id String @id @default(cuid())

  position    String?
  company     String?
  startDate   DateTime?
  endDate     DateTime?
  description String?

  resumeId String
  resume   Resume @relation(fields: [resumeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("work_experiences")
}

model Education {
  id String @id @default(cuid())

  degree      String?
  school      String?
  startDate   DateTime?
  endDate     DateTime?
  description String?

  resumeId String
  resume   Resume @relation(fields: [resumeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("educations")
}

model ResumeGroup {
  id     String @id @default(cuid())
  userId String
  name   String
  resumeIds String[] // Array of resume IDs
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("resume_groups")
}
